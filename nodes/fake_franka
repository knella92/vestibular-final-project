#!/usr/bin/env python3
'''
Used for running intergration tests, to offer a "dummy" version of a surface usually offered by franka_control, which is not loaded in rostests.

SERVICES:
  + "controller_manager/switch_controller" (controller_manager_msgs/SwitchController)  
    
    ~ Dummy service that ros_control_interface require be offered before it fully initializes. Returns True.

'''
#imports
import rospy
from controller_manager_msgs.srv import SwitchController
# import geometry_msgs.msg

class FakeFranka:
    """ Offers dummy service for rostests
    """
    def __init__(self):
        self.service = rospy.Service("controller_manager/switch_controller", SwitchController, self.fake_switch_cb)
       
    def fake_switch_cb(self, msg):
        """ Returns True for service calls to the controller switch during testing.
        """
        return True

def main():
    
    rospy.init_node('fake_franka', anonymous=True)
    ff = FakeFranka()
    rospy.spin()

if __name__ == '__main__':
    try:
        main()
    except rospy.ROSInterruptException:
        pass